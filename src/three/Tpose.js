/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useKeyboardControls } from '../hooks/useKeyboardControls'

export default function Model({

}) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/tpose.gltf')
  const { actions } = useAnimations(animations, group)

  const dirRot = useRef(0)

  const {
    moveForward,
    moveBackward,
    moveLeft,
    moveRight,
    jump,
  } = useKeyboardControls();

  console.log(actions)
  useEffect(() => {

  }, []);

  if (moveForward && moveLeft) {
    dirRot.current = 1.5
  } else if (moveForward && moveRight) {
    dirRot.current = -2.5
  } else if (moveBackward && moveLeft) {
    dirRot.current = 0.5
  } else if (moveBackward && moveRight) {
    dirRot.current = -1
  } else if (moveForward) {
    dirRot.current = 2.5
    actions.jogging.play();
  } else if (moveBackward) {
    dirRot.current = 0
  } else if (moveLeft) {
    dirRot.current = 1
  } else if (moveRight) {
    dirRot.current = -1.5
  } else if (
    !moveForward &&
    !moveBackward &&
    !moveLeft &&
    !moveRight) {
    actions.sadidle && actions.sadidle.play();
  }

  
  return (
    <group ref={group} dispose={null}>
      <group rotation={[Math.PI / 2, 0, dirRot.current]} scale={[0.01, 0.01, 0.01]}>
        <primitive object={nodes.mixamorigHips} />
        <skinnedMesh geometry={nodes.Ch46.geometry} material={materials.Ch46_body} skeleton={nodes.Ch46.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('/tpose.gltf')
